<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="/styles/index.css">
    <link rel="stylesheet" href="/styles/create.css">
</head>
<body>
    <div class="container">
        <h1>Admin Dashboard</h1>
        <div class="tabs">
            <button class="tab-button" onclick="switchTab('users')">Users</button>
            <button class="tab-button" onclick="switchTab('appointments')">Appointments</button>
            <button class="tab-button" onclick="switchTab('invoices')">Invoices</button>
        </div>

        <div id="users" class="tab-content">
            <h2>Users</h2>
            <p class="userSubmitFlag" id="userSubmitFlag" hidden></p>
            <button onclick="showCreateForm('user')">Create User</button>
            <div class="create-form-overlay" id="create-user-overlay" style="display:none" onclick="closeForm('user')"></div>
            <div id="create-user-container" style="display:none">
                <form id="create-user-form" class="create-form" onsubmit="createEntry(event, 'user')">
                    <button type="button" class="cancel-btn" onclick="closeForm('user')">Cancel</button>
                    <input type="text" placeholder="Full Name" name="fullName" required>
                    <input type="email" placeholder="Email" name="email" required>
                    <input type="text" placeholder="Phone Number" name="phoneNumber">
                    <button type="submit">Submit</button>
                </form>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach(user => { %>
                        <tr id="user-row-<%= user._id %>">
                            <td><span class="view-mode"><%= user.fullName %></span>
                                <input type="text" class="edit-mode" value="<%= user.fullName %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= user.email %></span>
                                <input type="email" class="edit-mode" value="<%= user.email %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= user.phoneNumber || 'N/A' %></span>
                                <input type="text" class="edit-mode" value="<%= user.phoneNumber %>" style="display: none">
                            </td>
                            <td>
                                <button class="edit-btn" onclick="startEditing('user', '<%= user._id %>')">Edit</button>
                                <button class="submit-btn edit-mode" onclick="submitEdit('user', '<%= user._id %>')" style="display: none">Submit</button>
                                <button class="cancel-btn edit-mode" onclick="cancelEdit('user', '<%= user._id %>')" style="display: none">Cancel</button>
                                <button class="delete-btn edit-mode" onclick="deleteEntry('<%= user._id %>', 'user')" style="display: none">Delete</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <div id="appointments" class="tab-content" style="display: none">
            <h2>Appointments</h2>
            <p class="appointmentSubmitFlag" id="appointmentSubmitFlag" hidden></p>
            <button onclick="showCreateForm('appointment')">Create Appointment</button>
            <div class="create-form-overlay" id="create-appointment-overlay" style="display:none" onclick="closeForm('appointment')"></div>
            <div id="create-appointment-container" style="display:none">
                <form id="create-appointment-form" class="create-form" onsubmit="createEntry(event, 'appointment')">
                    <button type="button" class="cancel-btn" onclick="closeForm('appointment')">Cancel</button>
                    <input type="text" placeholder="Customer Email" name="customerEmail" required>
                    <input type="text" placeholder="Course Name" name="courseName" required>
                    <input type="date" name="appointmentDate" required>
                    <input type="text" name="appointmentTime" placeholder="12:00 PM" required pattern="^(0?[1-9]|1[0-2]):[0-5][0-9] (AM|PM)$" title="Enter time in the format HH:MM AM/PM">
                    <select name="status" required>
                        <option value="Scheduled">Scheduled</option>
                        <option value="Completed">Completed</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                    <button type="submit">Submit</button>
                </form>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Customer</th>
                        <th>Course Name</th>
                        <th>Date</th>
                        <th>Time</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% appointments.forEach(appointment => { %>
                        <tr id="appointment-row-<%= appointment._id %>">
                            <td><span class="view-mode"><%= appointment.customer.email %></span>
                                <input type="text" class="edit-mode" value="<%= appointment.customer.email %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= appointment.courseName %></span>
                                <input type="text" class="edit-mode" value="<%= appointment.courseName %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= appointment.appointmentDate %></span>
                                <input type="date" class="edit-mode" value="<%= appointment.appointmentDate %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= appointment.appointmentTime %></span>
                                <input type="time" class="edit-mode" value="<%= appointment.appointmentTime %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= appointment.status %></span>
                                <select class="edit-mode" style="display: none">
                                    <option value="Scheduled" <%= appointment.status === 'Scheduled' ? 'selected' : '' %>>Scheduled</option>
                                    <option value="Completed" <%= appointment.status === 'Completed' ? 'selected' : '' %>>Completed</option>
                                    <option value="Cancelled" <%= appointment.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                </select>
                            </td>
                            <td>
                                <button class="edit-btn" onclick="startEditing('appointment', '<%= appointment._id %>')">Edit</button>
                                <button class="submit-btn edit-mode" onclick="submitEdit('appointment', '<%= appointment._id %>')" style="display: none">Submit</button>
                                <button class="cancel-btn edit-mode" onclick="cancelEdit('appointment', '<%= appointment._id %>')" style="display: none">Cancel</button>
                                <button class="delete-btn edit-mode" onclick="deleteEntry('<%= appointment._id %>', 'appointment')" style="display: none">Delete</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <div id="invoices" class="tab-content" style="display: none">
            <h2>Invoices</h2>
            <p class="invoiceSubmitFlag" id="invoiceSubmitFlag" hidden></p>
            <button onclick="showCreateForm('invoice')">Create Invoice</button>
            <div class="create-form-overlay" id="create-invoice-overlay" style="display:none" onclick="closeForm('invoice')"></div>
            <div id="create-invoice-container" style="display:none">
                <form id="create-invoice-form" class="create-form" onsubmit="createEntry(event, 'invoice')">
                    <button type="button" class="cancel-btn" onclick="closeForm('invoice')">Cancel</button>
                    <input type="text" placeholder="Invoice Number" name="invoiceNumber" required>
                    <input type="text" placeholder="Customer Email" name="customerEmail" required>
                    <input type="date" name="sessionDate" required>
                    <input type="number" placeholder="Amount" name="total" required>
                    <select name="isPaid" required>
                        <option value="true">Paid</option>
                        <option value="false">Not Paid</option>
                    </select>
                    <button type="submit">Submit</button>
                </form>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Invoice Number</th>
                        <th>Customer</th>
                        <th>Session Date</th>
                        <th>Amount</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% invoices.forEach(invoice => { %>
                        <tr id="invoice-row-<%= invoice._id %>">
                            <td><span class="view-mode"><%= invoice.invoiceNumber %></span>
                                <input type="text" class="edit-mode" value="<%= invoice.invoiceNumber %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= invoice.customer.email %></span>
                                <input type="text" class="edit-mode" value="<%= invoice.customer.email %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= invoice.sessionDate %></span>
                                <input type="date" class="edit-mode" value="<%= invoice.sessionDate %>" style="display: none">
                            </td>
                            <td><span class="view-mode"><%= invoice.total %></span>
                                <input type="number" class="edit-mode" value="<%= invoice.total %>" style="display: none">
                            </td>
                            <td>
                                <span class="view-mode"><%= invoice.isPaid ? 'Paid' : 'Not Paid' %></span>
                                <select class="edit-mode" style="display: none" name="isPaid">
                                    <option value="true" <%= invoice.isPaid ? 'selected' : '' %>>Paid</option>
                                    <option value="false" <%= !invoice.isPaid ? 'selected' : '' %>>Not Paid</option>
                                </select>
                            </td>
                            <td>
                                <button class="edit-btn" onclick="startEditing('invoice', '<%= invoice._id %>')">Edit</button>
                                <button class="submit-btn edit-mode" onclick="submitEdit('invoice', '<%= invoice._id %>')" style="display: none">Submit</button>
                                <button class="cancel-btn edit-mode" onclick="cancelEdit('invoice', '<%= invoice._id %>')" style="display: none">Cancel</button>
                                <button class="delete-btn edit-mode" onclick="deleteEntry('<%= invoice._id %>', 'invoice')" style="display: none">Delete</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function switchTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(tab => tab.style.display = 'none')
            document.getElementById(tabName).style.display = 'block'
        }

        document.getElementById('users').style.display = 'block'

        function showCreateForm(type) {
            document.getElementById(`create-${type}-overlay`).style.display = 'block'
            document.getElementById(`create-${type}-container`).style.display = 'block'
            document.body.classList.add('modal-open')
        }

        function closeForm(type) {
            document.getElementById(`create-${type}-overlay`).style.display = 'none'
            document.getElementById(`create-${type}-container`).style.display = 'none'
            document.body.classList.remove('modal-open')
        }

        function startEditing(type, rowId) {
            const row = document.getElementById(`${type}-row-${rowId}`)
            row.querySelectorAll('.view-mode').forEach(el => el.style.display = 'none')
            row.querySelector('.edit-btn').style.display = 'none'
            row.querySelectorAll('.edit-mode').forEach(el => el.style.display = 'inline-block')
        }

        function cancelEdit(type, rowId) {
            const row = document.getElementById(`${type}-row-${rowId}`)
            row.querySelectorAll('.view-mode').forEach(el => el.style.display = 'inline-block')
            row.querySelector('.edit-btn').style.display = 'inline-block'
            row.querySelectorAll('.edit-mode').forEach(el => el.style.display = 'none')
        }

        async function submitEdit(type, rowId) {
            const row = document.getElementById(`${type}-row-${rowId}`)
            const data = {}
            if (type === 'user') {
                data.fullName = row.querySelector('input[type="text"]').value
                data.email = row.querySelector('input[type="email"]').value
                data.phoneNumber = row.querySelector('input[type="text"]').value
            } else if (type === 'invoice') {
                data.invoiceNumber = row.querySelector('input[type="text"]').value
                data.total = parseFloat(row.querySelector('input[type="number"]').value)
                data.isPaid = row.querySelector('select[name="isPaid"]').value === 'true'
            } else if (type === 'appointment') {
                data.courseName = row.querySelector('input[type="text"]').value
                data.appointmentDate = row.querySelector('input[type="date"]').value
                data.status = row.querySelector('select').value
            }

            const response = await fetch(`/index/${type}s/${rowId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })

            const message = await response.json()

            
            
            if (response.status === 200) {
                if (type === 'user') {
                    document.getElementById("userSubmitFlag").innerHTML = message["message"]
                    document.getElementById("userSubmitFlag").style.display = "block"
                    document.getElementById("userSubmitFlag").style.color = "#0a3755"
                    document.getElementById("userSubmitFlag").style.backgroundColor = "#b7dffa"
                } else if (type === 'appointment') {
                    document.getElementById("appointmentSubmitFlag").innerHTML = message["message"]
                    document.getElementById("appointmentSubmitFlag").style.display = "block"
                    document.getElementById("appointmentSubmitFlag").style.color = "#0a3755"
                    document.getElementById("appointmentSubmitFlag").style.backgroundColor = "#b7dffa"
                } else if (type === 'invoice') {
                    document.getElementById("invoiceSubmitFlag").innerHTML = message["message"]
                    document.getElementById("invoiceSubmitFlag").style.display = "block"
                    document.getElementById("invoiceSubmitFlag").style.color = "#0a3755"
                    document.getElementById("invoiceSubmitFlag").style.backgroundColor = "#b7dffa"
                }
                await sleep(3000)
                window.location.reload()
            }
            else {
                if (type === 'user') {
                    document.getElementById("userSubmitFlag").innerHTML = message["message"]
                    document.getElementById("userSubmitFlag").style.display = "block"
                    document.getElementById("userSubmitFlag").style.color = "#D8000C"
                    document.getElementById("userSubmitFlag").style.backgroundColor = "#FFBABA"
                } else if (type === 'appointment') {
                    document.getElementById("appointmentSubmitFlag").innerHTML = message["message"]
                    document.getElementById("appointmentSubmitFlag").style.display = "block"
                    document.getElementById("appointmentSubmitFlag").style.color = "#D8000C"
                    document.getElementById("appointmentSubmitFlag").style.backgroundColor = "#FFBABA"
                } else if (type === 'invoice') {
                    document.getElementById("invoiceSubmitFlag").innerHTML = message["message"]
                    document.getElementById("invoiceSubmitFlag").style.display = "block"
                    document.getElementById("invoiceSubmitFlag").style.color = "#D8000C"
                    document.getElementById("invoiceSubmitFlag").style.backgroundColor = "#FFBABA"
                }
                await sleep(3000)
            }
        }

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        async function createEntry(event, type) {
            event.preventDefault()
            const form = event.target
            const data = Object.fromEntries(new FormData(form))
            const response = await fetch(`/index/${type}s`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })

            const message = await response.json()

            
            if (response.status === 201) {
                if (type === 'user') {
                    document.getElementById("userSubmitFlag").innerHTML = message["message"]
                    document.getElementById("userSubmitFlag").style.display = "block"
                    document.getElementById("userSubmitFlag").style.color = "#0a3755"
                    document.getElementById("userSubmitFlag").style.backgroundColor = "#b7dffa"
                } else if (type === 'appointment') {
                    document.getElementById("appointmentSubmitFlag").innerHTML = message["message"]
                    document.getElementById("appointmentSubmitFlag").style.display = "block"
                    document.getElementById("appointmentSubmitFlag").style.color = "#0a3755"
                    document.getElementById("appointmentSubmitFlag").style.backgroundColor = "#b7dffa"
                } else if (type === 'invoice') {
                    document.getElementById("invoiceSubmitFlag").innerHTML = message["message"]
                    document.getElementById("invoiceSubmitFlag").style.display = "block"
                    document.getElementById("invoiceSubmitFlag").style.color = "#0a3755"
                    document.getElementById("invoiceSubmitFlag").style.backgroundColor = "#b7dffa"
                }
                await sleep(3000)
                window.location.reload()
            }
            else {
                if (type === 'user') {
                    document.getElementById("userSubmitFlag").innerHTML = message["message"]
                    document.getElementById("userSubmitFlag").style.display = "block"
                    document.getElementById("userSubmitFlag").style.color = "#D8000C"
                    document.getElementById("userSubmitFlag").style.backgroundColor = "#FFBABA"
                } else if (type === 'appointment') {
                    document.getElementById("appointmentSubmitFlag").innerHTML = message["message"]
                    document.getElementById("appointmentSubmitFlag").style.display = "block"
                    document.getElementById("appointmentSubmitFlag").style.color = "#D8000C"
                    document.getElementById("appointmentSubmitFlag").style.backgroundColor = "#FFBABA"
                } else if (type === 'invoice') {
                    document.getElementById("invoiceSubmitFlag").innerHTML = message["message"]
                    document.getElementById("invoiceSubmitFlag").style.display = "block"
                    document.getElementById("invoiceSubmitFlag").style.color = "#D8000C"
                    document.getElementById("invoiceSubmitFlag").style.backgroundColor = "#FFBABA"
                }
                await sleep(3000)
            }
        }

        async function deleteEntry(id, type) {
            if (!confirm(`Are you sure you want to delete this ${type}?`)) return

            const response = await fetch(`/index/${type}s/${id}`, {
                method: 'DELETE'
            })

            const message = await response.json()
            
            if (response.status === 200) {
                if (type === 'user') {
                    document.getElementById("userSubmitFlag").innerHTML = message["message"]
                    document.getElementById("userSubmitFlag").style.display = "block"
                    document.getElementById("userSubmitFlag").style.color = "#0a3755"
                    document.getElementById("userSubmitFlag").style.backgroundColor = "#b7dffa"
                } else if (type === 'appointment') {
                    document.getElementById("appointmentSubmitFlag").innerHTML = message["message"]
                    document.getElementById("appointmentSubmitFlag").style.display = "block"
                    document.getElementById("appointmentSubmitFlag").style.color = "#0a3755"
                    document.getElementById("appointmentSubmitFlag").style.backgroundColor = "#b7dffa"
                } else if (type === 'invoice') {
                    document.getElementById("invoiceSubmitFlag").innerHTML = message["message"]
                    document.getElementById("invoiceSubmitFlag").style.display = "block"
                    document.getElementById("invoiceSubmitFlag").style.color = "#0a3755"
                    document.getElementById("invoiceSubmitFlag").style.backgroundColor = "#b7dffa"
                }
                await sleep(3000)
                window.location.reload()
            } else {
                if (type === 'user') {
                    document.getElementById("userSubmitFlag").innerHTML = message["message"]
                    document.getElementById("userSubmitFlag").style.display = "block"
                    document.getElementById("userSubmitFlag").style.color = "#D8000C"
                    document.getElementById("userSubmitFlag").style.backgroundColor = "#FFBABA"
                } else if (type === 'appointment') {
                    document.getElementById("appointmentSubmitFlag").innerHTML = message["message"]
                    document.getElementById("appointmentSubmitFlag").style.display = "block"
                    document.getElementById("appointmentSubmitFlag").style.color = "#D8000C"
                    document.getElementById("appointmentSubmitFlag").style.backgroundColor = "#FFBABA"
                } else if (type === 'invoice') {
                    document.getElementById("invoiceSubmitFlag").innerHTML = message["message"]
                    document.getElementById("invoiceSubmitFlag").style.display = "block"
                    document.getElementById("invoiceSubmitFlag").style.color = "#D8000C"
                    document.getElementById("invoiceSubmitFlag").style.backgroundColor = "#FFBABA"
                }
                await sleep(3000)
            }
        }

    </script>
</body>
</html>
